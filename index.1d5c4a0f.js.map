{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCKA,IAAM,EAAkB,SAAS,aAAa,CAAC,kBACzC,EAAqB,SAAS,aAAa,CAAC,kBAC5C,EAAe,SAAS,aAAa,CAAC,eACtC,EAAkB,SAAS,aAAa,CAAC,eAsE/C,EAAgB,gBAAgB,CAAC,QApEjC,WACE,IAAM,EAAQ,SAAS,aAAa,CAAC,UAAU,aAAa,CAAC,SAG5D,EAFY,EAAM,IAAI,EAEb,OAAO,CAAC,SAAC,CAAlB,EACC,EAAK,UAAU,CAAC,GAClB,GAEA,EAAmB,QAAQ,CAAG,CAAA,EAhBd,KAkBI,EAAM,aAAa,CAAC,MAAM,QAAQ,CAAC,MAAM,EAG3D,CAAA,EAAgB,QAAQ,CAAG,CAAA,CAD7B,CAGF,GAsDA,EAAmB,gBAAgB,CAAC,QApDpC,WACE,IAAM,EAAQ,SAAS,aAAa,CAAC,UAAU,aAAa,CAAC,SAG5D,EAFY,EAAM,IAAI,EAEb,OAAO,CAAC,SAAC,CAAlB,EAA2B,OAAA,EAAK,UAAU,CAAC,G,GAE5C,EAAgB,QAAQ,CAAG,CAAA,EA9BX,IAgCI,EAAM,aAAa,CAAC,MAAM,QAAQ,CAAC,MAAM,EAG3D,CAAA,EAAmB,QAAQ,CAAG,CAAA,CADhC,CAGF,GAwCA,EAAa,gBAAgB,CAAC,QAtC9B,WAKE,IAAK,IAJC,EAAQ,SAAS,aAAa,CAAC,UAAU,aAAa,CAAC,SACvD,EAAa,EAAM,aAAa,CAAC,MAAM,QAAQ,CAAC,MAAM,CACtD,EAAK,SAAS,aAAa,CAAC,MAEzB,EAAI,EAAG,GAAK,EAAY,IAAK,CACpC,IAAM,EAAK,SAAS,aAAa,CAAC,MAElC,EAAG,WAAW,CAAC,EACjB,CAEA,EAAM,MAAM,CAAC,GAEb,EAAgB,QAAQ,CAAG,CAAA,EArDX,KAuDC,EAAM,IAAI,CAAC,MAAM,EAGhC,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,CAGF,GAmBA,EAAgB,gBAAgB,CAAC,QAjBjC,WACE,IAAM,EAAQ,SAAS,aAAa,CAAC,UAAU,aAAa,CAAC,SAE7D,EAAM,SAAS,CAAC,IAEhB,EAAa,QAAQ,CAAG,CAAA,EAlER,IAoEC,EAAM,IAAI,CAAC,MAAM,EAGhC,CAAA,EAAgB,QAAQ,CAAG,CAAA,CAD7B,CAGF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar MAX_COUNT = 10;\nvar MIN_COUNT = 2;\nvar addColumnButton = document.querySelector(\".append-column\");\nvar removeColumnButton = document.querySelector(\".remove-column\");\nvar addRowButton = document.querySelector(\".append-row\");\nvar removeRowButton = document.querySelector(\".remove-row\");\nfunction addColumn() {\n    var table = document.querySelector(\".field\").querySelector(\"tbody\");\n    var rows = table.rows;\n    _to_consumable_array(rows).forEach(function(elem) {\n        elem.insertCell(-1);\n    });\n    removeColumnButton.disabled = false;\n    var countColumn = table.querySelector(\"tr\").children.length;\n    if (countColumn === MAX_COUNT) addColumnButton.disabled = true;\n}\nfunction removeColumn() {\n    var table = document.querySelector(\".field\").querySelector(\"tbody\");\n    var rows = table.rows;\n    _to_consumable_array(rows).forEach(function(elem) {\n        return elem.deleteCell(-1);\n    });\n    addColumnButton.disabled = false;\n    var countColumn = table.querySelector(\"tr\").children.length;\n    if (countColumn === MIN_COUNT) removeColumnButton.disabled = true;\n}\nfunction addRow() {\n    var table = document.querySelector(\".field\").querySelector(\"tbody\");\n    var cellsInRow = table.querySelector(\"tr\").children.length;\n    var tr = document.createElement(\"tr\");\n    for(var i = 1; i <= cellsInRow; i++){\n        var td = document.createElement(\"td\");\n        tr.appendChild(td);\n    }\n    table.append(tr);\n    removeRowButton.disabled = false;\n    var countRow = table.rows.length;\n    if (countRow === MAX_COUNT) addRowButton.disabled = true;\n}\nfunction removeRow() {\n    var table = document.querySelector(\".field\").querySelector(\"tbody\");\n    table.deleteRow(-1);\n    addRowButton.disabled = false;\n    var countRow = table.rows.length;\n    if (countRow === MIN_COUNT) removeRowButton.disabled = true;\n}\naddColumnButton.addEventListener(\"click\", addColumn);\nremoveColumnButton.addEventListener(\"click\", removeColumn);\naddRowButton.addEventListener(\"click\", addRow);\nremoveRowButton.addEventListener(\"click\", removeRow);\n\n//# sourceMappingURL=index.1d5c4a0f.js.map\n","'use strict';\n\nconst MAX_COUNT = 10;\nconst MIN_COUNT = 2;\n\nconst addColumnButton = document.querySelector('.append-column');\nconst removeColumnButton = document.querySelector('.remove-column');\nconst addRowButton = document.querySelector('.append-row');\nconst removeRowButton = document.querySelector('.remove-row');\n\nfunction addColumn() {\n  const table = document.querySelector('.field').querySelector('tbody');\n  const rows = table.rows;\n\n  [...rows].forEach((elem) => {\n    elem.insertCell(-1);\n  });\n\n  removeColumnButton.disabled = false;\n\n  const countColumn = table.querySelector('tr').children.length;\n\n  if (countColumn === MAX_COUNT) {\n    addColumnButton.disabled = true;\n  }\n}\n\nfunction removeColumn() {\n  const table = document.querySelector('.field').querySelector('tbody');\n  const rows = table.rows;\n\n  [...rows].forEach((elem) => elem.deleteCell(-1));\n\n  addColumnButton.disabled = false;\n\n  const countColumn = table.querySelector('tr').children.length;\n\n  if (countColumn === MIN_COUNT) {\n    removeColumnButton.disabled = true;\n  }\n}\n\nfunction addRow() {\n  const table = document.querySelector('.field').querySelector('tbody');\n  const cellsInRow = table.querySelector('tr').children.length;\n  const tr = document.createElement('tr');\n\n  for (let i = 1; i <= cellsInRow; i++) {\n    const td = document.createElement('td');\n\n    tr.appendChild(td);\n  }\n\n  table.append(tr);\n\n  removeRowButton.disabled = false;\n\n  const countRow = table.rows.length;\n\n  if (countRow === MAX_COUNT) {\n    addRowButton.disabled = true;\n  }\n}\n\nfunction removeRow() {\n  const table = document.querySelector('.field').querySelector('tbody');\n\n  table.deleteRow(-1);\n\n  addRowButton.disabled = false;\n\n  const countRow = table.rows.length;\n\n  if (countRow === MIN_COUNT) {\n    removeRowButton.disabled = true;\n  }\n}\n\naddColumnButton.addEventListener('click', addColumn);\nremoveColumnButton.addEventListener('click', removeColumn);\naddRowButton.addEventListener('click', addRow);\nremoveRowButton.addEventListener('click', removeRow);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","addColumnButton","document","querySelector","removeColumnButton","addRowButton","removeRowButton","addEventListener","table","rows","forEach","elem","insertCell","disabled","children","deleteCell","cellsInRow","tr","createElement","td","appendChild","append","deleteRow"],"version":3,"file":"index.1d5c4a0f.js.map"}